// <auto-generated />
using App.Models.Services.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App.Migrations
{
    [DbContext(typeof(FormazioneDbContext))]
    partial class FormazioneDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("App.Models.Entities.Corso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodiceDipartimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataFineCorso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataInizioCorso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EdizioneCorso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCorso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCorso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OreCorso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Corsi");
                });

            modelBuilder.Entity("App.Models.Entities.Docente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdDocente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MateriaInsegnata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NominativoDocente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Residenza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docenti");
                });

            modelBuilder.Entity("App.Models.Entities.Edificio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodiceDipartimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdEdificio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Laboratorio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Piano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Posti")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Edifici");
                });

            modelBuilder.Entity("App.Models.Entities.Lezione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodiceAula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodiceCorso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodiceDocente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CorsoId")
                        .HasColumnType("int");

                    b.Property<string>("DataFineLezione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataInizioLezione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocenteId")
                        .HasColumnType("int");

                    b.Property<string>("IdLezione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeLezione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CorsoId");

                    b.HasIndex("DocenteId");

                    b.ToTable("Lezioni");
                });

            modelBuilder.Entity("App.Models.Entities.Docente", b =>
                {
                    b.OwnsOne("App.Models.ValueTypes.Money", "CostoOrario", b1 =>
                        {
                            b1.Property<int>("DocenteId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<float>("Amount")
                                .HasColumnType("real")
                                .HasColumnName("CostoOrario_Amount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CostoOrario_Currency");

                            b1.HasKey("DocenteId");

                            b1.ToTable("Docenti");

                            b1.WithOwner()
                                .HasForeignKey("DocenteId");
                        });

                    b.Navigation("CostoOrario");
                });

            modelBuilder.Entity("App.Models.Entities.Lezione", b =>
                {
                    b.HasOne("App.Models.Entities.Corso", "Corso")
                        .WithMany("Lezioni")
                        .HasForeignKey("CorsoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Models.Entities.Docente", "Docente")
                        .WithMany("Lezioni")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corso");

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("App.Models.Entities.Corso", b =>
                {
                    b.Navigation("Lezioni");
                });

            modelBuilder.Entity("App.Models.Entities.Docente", b =>
                {
                    b.Navigation("Lezioni");
                });
#pragma warning restore 612, 618
        }
    }
}
